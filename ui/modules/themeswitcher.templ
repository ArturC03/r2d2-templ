package modules

import "github.com/axzilla/templui-quickstart/ui/components/button"

templ themeSwitcherHandler() {
	{{ handle := templ.NewOnceHandle() }}
	@handle.Once() {
		<script nonce={ templ.GetNonce(ctx) }>
			document.addEventListener('alpine:init', () => {
				Alpine.data('themeSwitcherHandler', () => ({
					isDarkMode() {
						return this.isDark
					},
					isLightMode() {
						return !this.isDark
					}
				}))
			}) 
		</script>
	}
}

type ThemeSwitcherProps struct {
	Class string
}

templ ThemeSwitcher(props ...ThemeSwitcherProps) {
	{{ var p ThemeSwitcherProps }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
	@themeSwitcherHandler()
	@button.Button(button.Props{
		Size:    button.SizeIcon,
		Variant: button.VariantGhost,
		Class:   p.Class,
		Attributes: templ.Attributes{
			"@click": "toggleTheme",
		},
	}) {
		@DynamicThemeIcon()
	}
}

templ DynamicThemeIcon() {
	<div x-data="themeSwitcherHandler">
		<span x-show="isDarkMode" class="block">
			@LightIcon()
		</span>
		<span x-show="isLightMode" class="block">
			@DarkIcon()
		</span>
	</div>
}

templ DarkIcon() {
	<svg
		xmlns="http://www.w3.org/2000/svg"
		width="24"
		height="24"
		viewBox="0 0 24 24"
		fill="none"
		stroke="currentColor"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round"
		class="lucide lucide-moon-icon lucide-moon"
	>
		<path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"></path>
	</svg>
}

templ LightIcon() {
	<svg
		xmlns="http://www.w3.org/2000/svg"
		width="24"
		height="24"
		viewBox="0 0 24 24"
		fill="none"
		stroke="currentColor"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round"
		class="lucide lucide-sun-medium-icon lucide-sun-medium"
	>
		<circle cx="12" cy="12" r="4"></circle>
		<path d="M12 3v1"></path>
		<path d="M12 20v1"></path>
		<path d="M3 12h1"></path>
		<path d="M20 12h1"></path>
		<path d="m18.364 5.636-.707.707"></path>
		<path d="m6.343 17.657-.707.707"></path>
		<path d="m5.636 5.636.707.707"></path>
		<path d="m17.657 17.657.707.707"></path>
	</svg>
}
